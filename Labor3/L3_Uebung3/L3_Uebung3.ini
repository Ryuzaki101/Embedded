

/*----------------------------------------------------------------------------*/
/* CAN_loopback_1_to_2() simulates loopback connection from CAN1 to CAN2 port */
/*----------------------------------------------------------------------------*/

signal void CAN_loopback_1_to_2 (void) {
  while (1) {
    wwatch(CAN1OUT);
    //twatch(10);
    CAN2ID = CAN1ID;
    CAN2B0 = CAN1B0; CAN2B1 = CAN1B1; CAN2B2 = CAN1B2; CAN2B3 = CAN1B3;
    CAN2B4 = CAN1B4; CAN2B5 = CAN1B5; CAN2B6 = CAN1B6; CAN2B7 = CAN1B7;
    CAN2L  = CAN1L;
    CAN2IN = CAN1OUT;
  }
}

/*----------------------------------------------------------------------------*/
/* CAN_loopback_2_to_1() simulates loopback connection from CAN2 to CAN1 port */
/*----------------------------------------------------------------------------*/

signal void CAN_loopback_2_to_1 (void) {
  while (1) {
    wwatch(CAN2OUT);
	//twatch(10);
    CAN1ID = CAN2ID;
    CAN1B0 = CAN2B0; CAN1B1 = CAN2B1; CAN1B2 = CAN2B2; CAN1B3 = CAN2B3;
    CAN1B4 = CAN2B4; CAN1B5 = CAN2B5; CAN1B6 = CAN2B6; CAN1B7 = CAN2B7;
    CAN1L  = CAN2L;
    CAN1IN = CAN2OUT;
  }
}


SIGNAL void sendCAN (float secs)  {
  int info;
  while (1)  {
    CAN1ID = 0x456;          // CAN message ID
    CAN1L  = 4;               // message length  bytes
    CAN1B0 = (info & 0xFF);   // message data byte 0
    CAN1B1 = (info >> 8);     // message data byte 1
    CAN1B2 = 0x41;           // message data byte 2
    CAN1B3 = 0x42;           // message data byte 3	
    CAN1IN = 1;               // send CAN message with 11-bit ID
    swatch (secs);            // delay for specified time
    info++;                   // increment info value
  }
}

kill button *

define button "CAN loopback 1to2",     "CAN_loopback_1_to_2 ()"
define button "CAN loopback 2to1",     "CAN_loopback_2_to_1 ()"
define button "CAN 1to2 OFF",        "signal kill CAN_loopback_1_to_2"
define button "CAN 2to1 OFF",        "signal kill CAN_loopback_2_to_1"

